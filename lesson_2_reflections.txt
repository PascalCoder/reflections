What happens when you initialize a repository? Why do you need to do it?
	Upon initializing a repository, git creates a .git file to keep track of all
	the changes that would be made in the directory.


How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area is where git places files that have been added from 
	a repository to git before being committed. It(the staging area) helps 
	you classify file according to how they relate or not to each other.
	

How can you use the staging area to make sure you have one commit per logical
change?
	The staging area can show you files that have been added but not yet committed.
	By doing git status, you can check the files that are in the staging area.
	If a file does not relate to others, it can be removed from the staging area
	by doing git reset <file_name>

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	You could use a branch for experimental changes. Changes to your file/s 
	for testing purposes. Changes you do not want to affect the master branch.

How do the diagrams help you visualize the branch structure?
	By showing each commit for the different specified branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Merging two branches is like combining them into one branch. Say we have branches
	A and B. Branches B contains the same files as branches A but new lines were added
	to a file in branch B which do not exist in branch A. Merging this two branches will
	make sure the files in branch A are updated.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?